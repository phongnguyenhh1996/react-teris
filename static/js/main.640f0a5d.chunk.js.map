{"version":3,"sources":["components/MainBoard/mainBoard.styled.js","components/MainBoard/index.js","shapes/allShapes.js","constants/index.js","shapes/index.js","themes/themesData.js","themes/themesType.js","themes/index.js","components/ElementsStyled/index.js","functions/index.js","components/Switch/index.js","components/SwitchLight/index.js","App.js","serviceWorker.js","index.js"],"names":["shakeAnimation","keyframes","fadeOutAnimation","MainBoard","styled","div","props","cellSize","columns","rows","theme","backgroundMainBoard","isShake","MainBoard__cell","attrs","style","top","position","left","right","bottom","color","isShadow","isDestroying","gameSettings","onAnimationEnd","setShake","cellsPosition","map","cellPosition","key","id","shadowShapePosition","shapes","0","matrix","center","1","2","3","fallSpeed","controlSpeed","fps","delayTime","colorArr","generateShape","shapeName","direction","x0","y0","customColor","isRotate","Math","round","random","length","shape","shapeCurrentDirection","shapeCurrentDirectionCenterPosition","lastDirectionIndex","Object","keys","shapeLastDirection","shapeLastDirectionCenterPosition","xPlus","yPlus","data","i","row","j","cell","push","isFalling","userControl","uniqueId","themeData","backgroundWrapper","title","mainHeading","textColor","themeTypeName","themeType","createTheme","name","themeChoosen","themesData","forEach","MainWrapper","MainHeading","h1","FixedTop","Text","span","createRandomShape","shapesName","allShapes","randomShape","currentShape","currentDirection","seperatorCell","newCellPosition","cloneDeep","cellPositionWithoutShape","filter","cellPositionWithShape","handleCollusion","allRestCell","isBottomCollusionCell","element","checkBottomCollisionShape","isBottomCollusionGround","isBottomCollusion","isLeftCollusionCell","checkLeftCollisionShape","isLeftCollusionGround","isLeftCollusion","isRightCollusionCell","checkRightCollisionShape","isRightCollusionGround","isRightCollusion","isOverlapsed","getShapeInfo","xMin","yMin","xMax","yMax","createShadowShape","shapeOnControl","shapeInfo","allCellSameColumns","allCellSameColumnsInfo","newShape","newTestShape","handleFallingCell","cells","destroyRows","keyBy","o","reverse","newDataWithoutFallingCell","rowCells","stepFalling","index","newRowCells","scoreRows","newCellPositionWithoutShape","parseInt","includes","shapeCollusion","control","setShadowShapePosition","isPrepareOnGround","controlSpeedStep","gameState","down","isCaculatePoint","newCellPositionWithShape","newRandomShape","shadowShape","rotate","newDirection","checkAndCreateShapeWithDir","setCellPosition","delayStep","fallStep","SwitchLabel","label","Slider","value","Input","input","Switch","type","disabled","readOnly","SwitchLight","className","functions","initShape","App","useState","useEffect","cellFallHandle","setInterval","cellPositionSeperateObj","clearInterval","handleKeyDown","e","keyCode","handleKeyUp","window","addEventListener","removeEventListener","localStorage","getItem","themeTypeChoosen","setThemeType","isLightOn","onChange","typeNameToChange","setItem","isReadOnly","Container","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.640f0a5d.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\n\nconst shakeAnimation = keyframes`\n  0% {\n    transform: translate(0);\n  }\n  20% {\n    transform: translate(-2px, 2px);\n  }\n  40% {\n    transform: translate(-2px, -2px);\n  }\n  60% {\n    transform: translate(2px, 2px);\n  }\n  80% {\n    transform: translate(2px, -2px);\n  }\n  100% {\n    transform: translate(0);\n  }\n`\n\nconst fadeOutAnimation = keyframes`\n  0% {\n    transform: scale(1);\n    filter: blur(0px);\n    opacity: 1;\n  }\n  100% {\n    transform: scale(2);\n    filter: blur(4px);\n    opacity: 0;\n  }\n`\n\nconst MainBoard = styled.div`\n  width: ${(props) => props.cellSize*props.columns}px;\n  height: ${(props) => props.cellSize*props.rows}px;\n  position: relative;\n  background-color: ${props => props.theme.backgroundMainBoard};\n  margin: auto;\n  animation: ${props => props.isShake && shakeAnimation} 0.3s linear;\n  overflow: hidden;\n`\n\nconst MainBoard__cell = styled.div.attrs(props => ({\n  style: {\n    top: props.position.top && props.position.top*props.cellSize + 'px',\n    left: props.position.left && props.position.left*props.cellSize + 'px',\n    right: props.position.right && props.position.right*props.cellSize + 'px',\n    bottom: props.position.bottom && props.position.bottom*props.cellSize + 'px'\n  }\n}))`\n  width: ${props => props.cellSize}px;\n  height: ${props => props.cellSize}px;\n  position: absolute;\n  background: ${(props) => props.position.color};\n  transition: left .3s ease, top .15s ease;\n  opacity: ${props => props.isShadow ? 0.2 : 1};\n  animation: ${props => props.position.isDestroying && fadeOutAnimation} 0.45s cubic-bezier(0.165, 0.840, 0.440, 1.000) both;\n`\n\nexport default {\n  MainBoard,\n  MainBoard__cell\n}","import Styled from \"./mainBoard.styled\";\nimport React from 'react'\n\nconst MainBoard = (props) => {\n  return (\n    <Styled.MainBoard {...props.gameSettings} isShake={props.isShake} onAnimationEnd={() => props.setShake(false)}>\n      {props.cellsPosition.map((cellPosition) => (\n        <Styled.MainBoard__cell key={cellPosition.id} {...props.gameSettings} position={cellPosition} />\n      ))}\n      {props.shadowShapePosition.map((cellPosition) => (\n        <Styled.MainBoard__cell key={`shadow-${cellPosition.id}`} {...props.gameSettings} position={cellPosition} isShadow />\n      ))}\n    </Styled.MainBoard>\n  )\n}\n\nexport default MainBoard\n","const shapes = {\n  // t shape\n  't': {\n    0: {\n      matrix: [\n        [1, 1, 1],\n        [0, 1, 0]\n      ],\n      center: [0, 1]\n    },\n    1: {\n      matrix: [\n        [0, 1],\n        [1, 1],\n        [0, 1]\n      ],\n      center: [1, 1]\n    },\n    2: {\n      matrix: [\n        [0, 1, 0],\n        [1, 1, 1]\n      ],\n      center: [1, 1]\n    },\n    3: {\n      matrix: [\n        [1, 0],\n        [1, 1],\n        [1, 0]\n      ],\n      center: [1, 0]\n    }\n  },\n  // L shape\n  'l': {\n    0: {\n      matrix: [\n        [1, 1, 1],\n        [0, 0, 1]\n      ],\n      center: [0, 1]\n    },\n    1: {\n      matrix: [\n        [0, 1],\n        [0, 1],\n        [1, 1]\n      ],\n      center: [1, 1]\n    },\n    2: {\n      matrix: [\n        [1, 0, 0],\n        [1, 1, 1]\n      ],\n      center: [1, 1]\n    },\n    3: {\n      matrix: [\n        [1, 1],\n        [1, 0],\n        [1, 0]\n      ],\n      center: [1, 0]\n    }\n  },\n  // i shape\n  'i': {\n    0: {\n      matrix: [\n        [1, 1, 1, 1]\n      ],\n      center: [0, 1]\n    },\n    1: {\n      matrix: [\n        [1],\n        [1],\n        [1],\n        [1]\n      ],\n      center: [1, 0]\n    }\n  },\n  // o shape\n  'o': {\n    0: {\n      matrix: [\n        [1, 1],\n        [1, 1]\n      ],\n      center: [0, 0]\n    }\n  },\n  // j shape\n  'j': {\n    0: {\n      matrix: [\n        [1, 1, 1],\n        [1, 0, 0]\n      ],\n      center: [0, 1]\n    },\n    1: {\n      matrix: [\n        [1, 1],\n        [0, 1],\n        [0, 1]\n      ],\n      center: [1, 1]\n    },\n    2: {\n      matrix: [\n        [0, 0, 1],\n        [1, 1, 1]\n      ],\n      center: [1, 1]\n    },\n    3: {\n      matrix: [\n        [1, 0],\n        [1, 0],\n        [1, 1]\n      ],\n      center: [1, 0]\n    }\n  },\n  // z shape\n  'z': {\n    0: {\n      matrix: [\n        [1, 1, 0],\n        [0, 1, 1]\n      ],\n      center: [0, 1]\n    },\n    1: {\n      matrix: [\n        [0, 1],\n        [1, 1],\n        [1, 0]\n      ],\n      center: [1, 1]\n    },\n    2: {\n      matrix: [\n        [1, 1, 0],\n        [0, 1, 1]\n      ],\n      center: [1, 1]\n    },\n    3: {\n      matrix: [\n        [0, 1],\n        [1, 1],\n        [1, 0]\n      ],\n      center: [1, 0]\n    }\n  },\n  // s left shape\n  's': {\n    0: {\n      matrix: [\n        [0, 1, 1],\n        [1, 1, 0]\n      ],\n      center: [0, 1]\n    },\n    1: {\n      matrix: [\n        [1, 0],\n        [1, 1],\n        [0, 1]\n      ],\n      center: [1, 1]\n    },\n    2: {\n      matrix: [\n        [0, 1, 1],\n        [1, 1, 0]\n      ],\n      center: [1, 1]\n    },\n    3: {\n      matrix: [\n        [1, 0],\n        [1, 1],\n        [0, 1]\n      ],\n      center: [1, 0]\n    }\n  }\n}\n\nexport default shapes","const gameSettings = {\n  cellSize: 25,\n  columns: 16,\n  rows: 24,\n  fallSpeed: 500,\n  controlSpeed: 60,\n  fps: 60,\n  delayTime: 50\n}\n\nexport {\n  gameSettings\n}","import { uniqueId } from \"lodash\";\nimport shapes from \"./allShapes\";\nimport { gameSettings } from \"../constants\";\n\nconst colorArr = [\"#A848E3\", \"#E4E250\", \"#F6A8DE\", \"#ABE124\", \"#D04D41\", \"#F20B35\", \"#2ED8DB\", \"#1708EF\", \"#F6847E\", \"#FCB01E\", \"#39FBBD\", \"#6FFA14\"]\n\nconst generateShape = (shapeName, direction, x0 = gameSettings.columns/2-1, y0 = 0, customColor, isRotate = false) => {\n  const color = colorArr[Math.round(Math.random() * (colorArr.length - 1))]\n  const shape = shapes[shapeName]\n  const shapeCurrentDirection = shape[direction]\n  const shapeCurrentDirectionCenterPosition = shapeCurrentDirection.center\n  const lastDirectionIndex = (direction - 1) >= 0 ? (direction - 1) : Object.keys(shape).length - 1\n  \n  const shapeLastDirection = shape[lastDirectionIndex]\n  const shapeLastDirectionCenterPosition = shapeLastDirection.center\n  let xPlus = 0, yPlus = 0\n  if (isRotate) {\n    xPlus = shapeLastDirectionCenterPosition[0] - shapeCurrentDirectionCenterPosition[0]\n    yPlus = shapeLastDirectionCenterPosition[1] - shapeCurrentDirectionCenterPosition[1]\n  }\n  const { matrix } = shapeCurrentDirection\n  const data = []\n  for (let i = 0; i < matrix.length; i++) {\n    const row = matrix[i];\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n      if (cell === 1) {\n        data.push({\n          top: y0 + i + xPlus,\n          left: x0 + j + yPlus,\n          isFalling: true,\n          userControl: true,\n          direction,\n          color: customColor || color,\n          id: uniqueId(uniqueId('shape-') + '-')\n        })\n      }\n    }\n  }\n  return data\n}\n\nexport default generateShape","const themeData = {\n  backgroundWrapper: ['#fff', '#222831'],\n  backgroundMainBoard: ['#eeeeee', '#393e46'],\n  title: ['#00adb5', '#00adb5'],\n  mainHeading: ['#00adb5', '#00adb5'],\n  textColor: ['#222831', '#eeeeee']\n}\n\nexport default themeData","export const themeTypeName = {\n  LIGHT: 'light',\n  DARK: 'dark'\n}\nexport const themeType = {\n  [themeTypeName.LIGHT]: 0,\n  [themeTypeName.DARK]: 1\n}\n\n\nexport default themeType","import themesData from \"./themesData\";\nimport { themeType } from \"./themesType\";\n\nconst createTheme = name => {\n  const theme = {}\n  const themeChoosen = themeType[name]\n  Object.keys(themesData).forEach(key => {\n    theme[key] = themesData[key][themeChoosen]\n  })\n  return theme\n}\n\nexport default createTheme","import styled from \"styled-components\";\n\nconst MainWrapper = styled.div`\n  background-color: ${props => props.theme.backgroundWrapper};\n  min-height: 100vh;\n  font-family: 'Righteous', cursive;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n`\n\nconst MainHeading = styled.h1`\n  color: ${props => props.theme.mainHeading};\n`\n\nconst FixedTop = styled.div`\n  position: fixed;\n  top: 10px;\n  right: 10px;\n`\n\nconst Text = styled.span`\n  color: ${props => props.theme.textColor};\n`\n\nexport {\n  MainWrapper,\n  MainHeading,\n  FixedTop,\n  Text\n}","import allShapes from \"../shapes/allShapes\";\nimport { random, cloneDeep, keyBy } from \"lodash\";\nimport { gameSettings } from '../constants'\nimport generateShape from \"../shapes\";\n\nconst createRandomShape = () => {\n  const shapesName = Object.keys(allShapes)\n  const randomShape = shapesName[random(shapesName.length - 1)]\n  \n  return {\n    currentShape: randomShape,\n    currentDirection: random(Object.keys(allShapes[randomShape]).length - 1)\n  }\n}\n\nconst seperatorCell = data => {\n  const newCellPosition = cloneDeep(data)\n  const cellPositionWithoutShape = newCellPosition.filter(cell => !cell.userControl && !cell.isFalling)\n  const cellPositionWithShape = newCellPosition.filter(cell => cell.userControl && cell.isFalling)\n\n  return {\n    cellPositionWithShape,\n    cellPositionWithoutShape,\n  }\n}\n\nconst handleCollusion = (shape, allRestCell) => {\n  const checkBottomCollisionShape = (currentShape, cell) => currentShape.filter(element => element.top + 1 === cell.top && element.left === cell.left).length > 0\n  const checkLeftCollisionShape = (currentShape, cell) => currentShape.filter(element => element.top === cell.top && element.left - 1 === cell.left).length > 0\n  const checkRightCollisionShape = (currentShape, cell) => currentShape.filter(element => element.top === cell.top && element.left + 1 === cell.left).length > 0\n\n  const isBottomCollusionCell = allRestCell.filter(cell => checkBottomCollisionShape(shape, cell)).length > 0\n  const isBottomCollusionGround = shape.filter(element => element.top + 1 === gameSettings.rows).length > 0\n  const isBottomCollusion = isBottomCollusionCell || isBottomCollusionGround\n\n  const isLeftCollusionCell = allRestCell.filter(cell => checkLeftCollisionShape(shape, cell)).length > 0\n  const isLeftCollusionGround = shape.filter(element => element.left - 1 < 0).length > 0\n  const isLeftCollusion = isLeftCollusionCell || isLeftCollusionGround\n\n  const isRightCollusionCell = allRestCell.filter(cell => checkRightCollisionShape(shape, cell)).length > 0\n  const isRightCollusionGround = shape.filter(element => element.left + 1 >= gameSettings.columns).length > 0\n  const isRightCollusion = isRightCollusionCell || isRightCollusionGround\n\n  const isOverlapsed = shape.filter(element =>\n    element.left < 0 ||\n    element.left >= gameSettings.columns ||\n    element.top >= gameSettings.rows ||\n    allRestCell.filter(cell => cell.left === element.left && cell.top === element.top).length > 0\n  ).length > 0\n\n  return {\n    isBottomCollusion,\n    isLeftCollusion,\n    isRightCollusion,\n    isOverlapsed\n  }\n}\n\nconst getShapeInfo = (shape) => {\n  if (shape.length === 0) {\n    return {}\n  }\n  let xMin = shape[0].left\n  let yMin = shape[0].top\n  let xMax = shape[0].left\n  let yMax = shape[0].top\n  shape.forEach(cell => {\n    if (cell.left < xMin) xMin = cell.left;\n    if (cell.top < yMin) yMin = cell.top;\n    if (cell.left > xMax) xMax = cell.left;\n    if (cell.top > yMax) yMax = cell.top\n  })\n  return { xMin, yMin, xMax, yMax, color: shape[0].color }\n}\n\nconst createShadowShape = (shape, allRestCell, shapeOnControl) => {\n  const shapeInfo = getShapeInfo(shape)\n  const allCellSameColumns = allRestCell.filter(cell => cell.left >= shapeInfo.xMin && cell.left <= shapeInfo.xMax)\n  const allCellSameColumnsInfo = getShapeInfo(allCellSameColumns)\n  if (!allCellSameColumnsInfo.yMin || !allCellSameColumnsInfo.yMax) {\n    return generateShape(shapeOnControl.currentShape, shapeOnControl.currentDirection, shapeInfo.xMin, gameSettings.rows - 1 - (shapeInfo.yMax - shapeInfo.yMin), shapeInfo.color)\n  }\n  let newShape = []\n  \n  for (let i = allCellSameColumnsInfo.yMin - (shapeInfo.yMax - shapeInfo.yMin + 1); i < allCellSameColumnsInfo.yMin + (shapeInfo.yMax - shapeInfo.yMin); i++) {\n    const newTestShape = generateShape(shapeOnControl.currentShape, shapeOnControl.currentDirection, shapeInfo.xMin, i, shapeInfo.color)\n    \n    const { isBottomCollusion } = handleCollusion(newTestShape, allCellSameColumns)\n    \n    if (isBottomCollusion) {\n      newShape = newTestShape\n      break\n    }\n    \n  }\n  return newShape\n}\n\nconst handleFallingCell = (cells) => {\n  const destroyRows = Object.keys(keyBy(cells.filter(cell => cell.isDestroying), o => o.top)).reverse()\n  cells = cells.filter(cell => !cell.isDestroying)\n  const newDataWithoutFallingCell = []\n  \n  for (let i = gameSettings.rows - 1; i > 0; i--) {\n    const rowCells = cells.filter(cell => cell.top === i)\n    if (rowCells.length === 0) {\n      continue\n    }\n    const stepFalling = destroyRows.filter(index => i < index).length\n    const newRowCells = rowCells.map(cell => ({...cell, top: cell.top + stepFalling}))\n    newDataWithoutFallingCell.push(...newRowCells)\n  }\n  return newDataWithoutFallingCell\n}\n\nconst calculatePointAndCellsPosition = (cellPosition, shape = []) => {\n  const rows = {}\n  const scoreRows = []\n  const { cellPositionWithShape, cellPositionWithoutShape } = seperatorCell([...cellPosition, ...shape])\n  let newCellPositionWithoutShape = [...cellPositionWithoutShape]\n  newCellPositionWithoutShape.forEach(cell => {\n    if (!rows[cell.top]) {\n      rows[cell.top] = 1\n    } else {\n      rows[cell.top] += 1\n    }\n  })\n  Object.keys(rows).forEach(row => {\n    if (rows[row] === gameSettings.columns) {\n      scoreRows.push(parseInt(row))\n    }\n  })\n  if (scoreRows.length > 0) {\n    newCellPositionWithoutShape = newCellPositionWithoutShape.map(cell => ({...cell, isDestroying: scoreRows.includes(cell.top)}))\n  } else {\n    return [...cellPositionWithoutShape, ...cellPositionWithShape]\n  }\n  return [...newCellPositionWithoutShape, ...cellPositionWithShape]\n}\n\nconst handleControlLeftRight = (shapeCollusion, shapeOnControl, control, cellPosition, setShadowShapePosition) => {\n  if (!shapeCollusion.isBottomCollusion || (shapeCollusion.isBottomCollusion && !shapeOnControl.isPrepareOnGround)) {\n    if (!shapeCollusion.isLeftCollusion && control.left && control.controlSpeedStep >= gameSettings.controlSpeed) {\n      cellPosition.cellPositionWithShape = cellPosition.cellPositionWithShape.map(cell => ({...cell, left: cell.left - 1}))\n      const shadowShape = createShadowShape(cellPosition.cellPositionWithShape, cellPosition.cellPositionWithoutShape, shapeOnControl)\n      setShadowShapePosition(shadowShape)\n      control.controlSpeedStep = 0\n    }\n    if (!shapeCollusion.isRightCollusion && control.right && control.controlSpeedStep >= gameSettings.controlSpeed) {\n      cellPosition.cellPositionWithShape = cellPosition.cellPositionWithShape.map(cell => ({...cell, left: cell.left + 1}))\n      const shadowShape = createShadowShape(cellPosition.cellPositionWithShape, cellPosition.cellPositionWithoutShape, shapeOnControl)\n      setShadowShapePosition(shadowShape)\n      control.controlSpeedStep = 0\n    }\n  }\n}\n\nconst handleControlDown = (cellPosition, shadowShapePosition, control, gameState, shapeOnControl, setShadowShapePosition, setShake) => {\n  if (control.down) {\n    gameState.isCaculatePoint = true\n    const newCellPositionWithShape = shadowShapePosition.map((cell, index) => ({...cell, isFalling: false, userControl: false, id: cellPosition.cellPositionWithShape[index].id}))\n    cellPosition.cellPositionWithShape = newCellPositionWithShape\n    const newRandomShape = createRandomShape()\n    shapeOnControl.currentShape = newRandomShape.currentShape\n    shapeOnControl.currentDirection = newRandomShape.currentDirection\n    const newShape = generateShape(shapeOnControl.currentShape, shapeOnControl.currentDirection)\n    const shadowShape = createShadowShape(newShape, [...cellPosition.cellPositionWithoutShape, ...cellPosition.cellPositionWithShape], shapeOnControl)\n    cellPosition.cellPositionWithShape.push(...newShape)\n    setShadowShapePosition(shadowShape)\n    setShake(true)\n    control.down = false\n  }\n}\n\nconst handleControlRotate = (cellPosition ,control, shapeOnControl, setShadowShapePosition) => {\n  if (control.rotate && control.controlSpeedStep >= gameSettings.controlSpeed) {\n    control.controlSpeedStep = 0\n    const newDirection = (shapeOnControl.currentDirection + 1) % (Object.keys(allShapes[shapeOnControl.currentShape]).length)\n    \n    const checkAndCreateShapeWithDir = (newCellPosition) => {\n      const { cellPositionWithShape, cellPositionWithoutShape } = seperatorCell(newCellPosition)\n      const {\n        isOverlapsed\n      } = handleCollusion(cellPositionWithShape, cellPositionWithoutShape)\n      if (!isOverlapsed) {\n        return cellPositionWithShape\n      } \n      return null\n    }\n    const {xMin, yMin, color} = getShapeInfo(cellPosition.cellPositionWithShape)\n    \n    const newCellPositionWithShape = checkAndCreateShapeWithDir([...cellPosition.cellPositionWithoutShape, ...generateShape(shapeOnControl.currentShape, newDirection, xMin, yMin, color, true)])\n    \n    if (newCellPositionWithShape !== null) {\n      shapeOnControl.currentDirection = newDirection\n      cellPosition.cellPositionWithShape = newCellPositionWithShape\n      const shadowShape = createShadowShape(cellPosition.cellPositionWithShape, cellPosition.cellPositionWithoutShape, shapeOnControl)\n      setShadowShapePosition(shadowShape)\n    }\n  }\n}\n\nconst handleDestroyCell = (cellPosition, gameState, shapeOnControl, setShadowShapePosition, setCellPosition) => {\n  const destroyingCells = cellPosition.cellPositionWithoutShape.filter(cell => cell.isDestroying)\n  const isHaveDestroyingCells = destroyingCells.length > 0\n  if (isHaveDestroyingCells) {\n    if (gameState.delayStep >= gameSettings.delayTime) {\n      cellPosition.cellPositionWithoutShape = handleFallingCell(cellPosition.cellPositionWithoutShape)\n      const shadowShape = createShadowShape(cellPosition.cellPositionWithShape, cellPosition.cellPositionWithoutShape, shapeOnControl)\n      setShadowShapePosition(shadowShape)\n      let newCellPosition = [...cellPosition.cellPositionWithoutShape, ...cellPosition.cellPositionWithShape]\n      gameState.delayStep = 0\n      return setCellPosition(newCellPosition)\n    } else {\n      gameState.delayStep += gameSettings.fps\n    }\n  }\n}\n\nconst handleFallingShape = (cellPosition ,gameState, shapeCollusion, shapeOnControl, setShadowShapePosition) => {\n  gameState.fallStep += gameSettings.fps\n  if (gameState.fallStep >= gameSettings.fallSpeed) {\n    gameState.fallStep = 0\n\n    if (shapeCollusion.isBottomCollusion) {\n      if (!shapeOnControl.isPrepareOnGround) {\n        shapeOnControl.isPrepareOnGround = true\n      } else {\n        gameState.isCaculatePoint = true\n        cellPosition.cellPositionWithShape = cellPosition.cellPositionWithShape.map(cell => ({...cell,  isFalling: false, userControl: false}))\n        const newRandomShape = createRandomShape()\n        shapeOnControl.currentShape = newRandomShape.currentShape\n        shapeOnControl.currentDirection = newRandomShape.currentDirection\n        const newShape = generateShape(shapeOnControl.currentShape, shapeOnControl.currentDirection)\n        const shadowShape = createShadowShape(newShape, [...cellPosition.cellPositionWithoutShape, ...cellPosition.cellPositionWithShape], shapeOnControl)\n        cellPosition.cellPositionWithShape.push(...newShape)\n        setShadowShapePosition(shadowShape)\n        shapeOnControl.isPrepareOnGround = false\n      }\n    } else {\n      cellPosition.cellPositionWithShape = cellPosition.cellPositionWithShape.map(cell => ({...cell, isFalling: true, top: cell.top + 1}))\n      shapeOnControl.isPrepareOnGround = false\n    }\n  }\n}\n\nexport default {\n  createRandomShape,\n  seperatorCell,\n  handleCollusion,\n  getShapeInfo,\n  createShadowShape,\n  handleFallingCell,\n  calculatePointAndCellsPosition,\n  handleControlLeftRight,\n  handleControlDown,\n  handleControlRotate,\n  handleDestroyCell,\n  handleFallingShape\n}","\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst SwitchLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 40px;\n  height: 24px;\n  margin: 0;\n`;\n\nconst Slider = styled.div`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${props => props.value ? '#1E81AE' : '#ccc'};\n  -webkit-transition: .4s;\n  transition: .4s;\n  border-radius: 34px;\n\n  &:before{\n    position: absolute;\n    content: \"\";\n    height: 18px;\n    width: 18px;\n    left: 3px;\n    bottom: 3px;\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n  }\n`;\n\nconst Input = styled.input`\n  display: none;\n\n  &:focus + ${Slider}{\n    box-shadow: 0 0 1px #2196F3;\n  }\n\n  &:checked + ${Slider}:before {\n    transform: translateX(16px);\n  }\n`;\n\nconst Switch = (props) => {\n  return (\n    <SwitchLabel>\n      <Input {...props} type=\"checkbox\" disabled={props.readOnly} />\n      <Slider value={props.value} />\n    </SwitchLabel>\n  );\n}\n\nexport default Switch;","import React from 'react'\nimport { FixedTop, Text } from '../ElementsStyled'\nimport Switch from '../Switch'\n\nexport const SwitchLight = (props) => {\n  return (\n    <FixedTop>\n      <div className=\"d-flex align-items-center\">\n        <Text className=\"mr-2\">Light:</Text>\n        <Switch {...props}/>\n      </div>\n    </FixedTop>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport MainBoard from \"./components/MainBoard\";\nimport './App.css';\nimport generateShape from './shapes';\nimport { Container } from 'reactstrap';\nimport { ThemeProvider } from \"styled-components\";\nimport createTheme from './themes';\nimport { themeTypeName } from './themes/themesType';\nimport { MainWrapper, MainHeading } from './components/ElementsStyled';\nimport functions from \"./functions\";\nimport { gameSettings } from './constants'\nimport { SwitchLight } from './components/SwitchLight';\n\nconst gameState = {\n  fallStep: 0,\n  isCaculatePoint: false,\n  delayStep: 0\n}\nconst shapeOnControl = {\n  isPrepareOnGround: false,\n  ...functions.createRandomShape()\n}\nconst initShape = generateShape(shapeOnControl.currentShape, shapeOnControl.currentDirection)\nconst control = {\n  left: false,\n  right: false,\n  rotate: false,\n  down: false,\n  controlSpeedStep: gameSettings.controlSpeed\n}\n\n\n\nfunction App() {\n  const [cellPosition, setCellPosition] = useState(initShape)\n  const [isShake, setShake] = useState(false)\n  const [shadowShapePosition, setShadowShapePosition] = useState(functions.createShadowShape(initShape, [], shapeOnControl))\n\n  useEffect(() => {\n    const cellFallHandle = setInterval(() => {\n      const cellPositionSeperateObj = functions.seperatorCell(cellPosition)\n\n      functions.handleDestroyCell(cellPositionSeperateObj, gameState, shapeOnControl, setShadowShapePosition, setCellPosition)\n      \n      const shapeCollusion = functions.handleCollusion(cellPositionSeperateObj.cellPositionWithShape, cellPositionSeperateObj.cellPositionWithoutShape)\n      functions.handleControlLeftRight(shapeCollusion, shapeOnControl, control, cellPositionSeperateObj, setShadowShapePosition)\n      \n      functions.handleFallingShape(cellPositionSeperateObj, gameState, shapeCollusion, shapeOnControl, setShadowShapePosition)\n\n      functions.handleControlDown(cellPositionSeperateObj, shadowShapePosition, control, gameState, shapeOnControl, setShadowShapePosition, setShake)\n      \n      functions.handleControlRotate(cellPositionSeperateObj, control, shapeOnControl, setShadowShapePosition)\n      \n      let newCellPosition = [...cellPositionSeperateObj.cellPositionWithoutShape, ...cellPositionSeperateObj.cellPositionWithShape]\n      if (gameState.isCaculatePoint) {\n        newCellPosition = functions.calculatePointAndCellsPosition(newCellPosition)\n        gameState.isCaculatePoint = false\n      }\n      setCellPosition(newCellPosition)\n    }, gameSettings.fps);\n    return () => {\n      clearInterval(cellFallHandle)\n    };\n  }, [cellPosition, shadowShapePosition])\n\n  const handleKeyDown = (e) => {\n    switch (e.keyCode) {\n      case 37:\n        control.left = true\n        control.controlSpeedStep += gameSettings.fps\n        break;\n      case 39:\n        control.right = true\n        control.controlSpeedStep += gameSettings.fps\n        break;\n      case 38:\n        control.rotate = true\n        control.controlSpeedStep += gameSettings.fps\n        break;\n      case 40:\n        control.down = true\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleKeyUp = (e) => {\n    switch (e.keyCode) {\n      case 37:\n        control.left = false\n        control.controlSpeedStep = gameSettings.controlSpeed\n        break;\n      case 39:\n        control.right = false\n        control.controlSpeedStep = gameSettings.controlSpeed\n        break;\n      case 38:\n        control.rotate = false\n        control.controlSpeedStep += gameSettings.controlSpeed\n        break;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n      window.addEventListener('keyup', handleKeyUp)\n    }\n  }, [])\n\n  const [themeTypeChoosen, setThemeType] = useState(localStorage.getItem('theme') || themeTypeName.LIGHT)\n\n  const chooseTheme = () => {\n    const typeNameToChange = themeTypeChoosen !== themeTypeName.LIGHT ? themeTypeName.LIGHT : themeTypeName.DARK\n    localStorage.setItem('theme', typeNameToChange)\n    setThemeType(typeNameToChange)\n  }\n\n  const isLightOn = themeTypeChoosen === themeTypeName.LIGHT\n  \n  return (\n    <ThemeProvider theme={createTheme(themeTypeChoosen)}>\n      <MainWrapper>\n        <SwitchLight value={isLightOn} onChange={chooseTheme} isReadOnly/>\n        <Container className=\"App\">\n          <MainHeading className=\"text-center\">TERIS RACE</MainHeading>\n          <MainBoard gameSettings={gameSettings} cellsPosition={cellPosition} shadowShapePosition={shadowShapePosition} isShake={isShake} setShake={setShake} />\n        </Container>\n      </MainWrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-righteous';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}